---
# yamllint disable rule:line-length
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlStatementSet
metadata:
    name: core-services
    annotations:
        checksum/config: >-
            {{ include (print $.Template.BasePath "/core-tables.yaml") . | sha256sum }}
            {{ include (print $.Template.BasePath "/core-kafka-topics.yaml") . | sha256sum }}
spec:
    sqlstatements:
        - |-
            /* validates changes in alerts_bulk and only forward if there are specific changes
            This is part of the core service */
            insert into alerts
            select  resource, event, environment, service, severity, customer, `text` from
            (
                select resource, event,
                    last_value(environment) as environment,
                    service,
                    rand() as rnd,
                    last_value(A.customer) as customer,
                    last_value(`text`) as `text`,
                    LAG(A.severity) as last_severity,
                    last_value(A.severity) as severity,
                    LAG(A.customer) as last_customer,
                    LAG(A.environment) as last_environment
                from (
                        select window_time as ts, customer, environment, service, resource, event,  window_start, window_end, last_value(severity) as severity, last_value(`text`) as `text`
                        from TABLE(
                        TUMBLE(TABLE alerts_filter, DESCRIPTOR(`ts`), INTERVAL {{.Values.flink.alertWindow|squote}} SECOND))
                        GROUP BY window_time, window_start, window_end, resource, event, service, customer, environment
                    ) as A
                    GROUP BY A.resource, A.event, A.service, A.customer, A.environment
                    WINDOW w as (
                        PARTITION BY resource, event
                        ORDER BY A.ts ASC
                        ROWS BETWEEN 1 PRECEDING AND CURRENT ROW)
            )
            WHERE last_severity <> severity OR
                  last_severity IS NULL OR
                  last_environment <> environment OR
                  last_customer <> customer;
        - |-
          /* aggregates entities from attributes topic and insert it every 2 seconds in update channel
            part of CORE SERVICES */
          insert into ngsild_updates
          select 'update', true, true, '[{"id": "' || id || '",' || LISTAGG(attributeagg) || '}]'
          from (
              select  window_start, window_end, B.entityId as id, '"' || B.name || '":[' || LISTAGG(B.indexagg) || ']' as attributeagg
              from(
                  select window_start, window_end, entityId, name,
                  '{"type": "'
                          || LAST_VALUE(A.`type`)
                          || IF(LAST_VALUE(A.`type`) =  'https://uri.etsi.org/ngsi-ld/Relationship','", "object": "', '", "value": ')
                          || IF(LAST_VALUE(A.`type`) =  'https://uri.etsi.org/ngsi-ld/Relationship', LAST_VALUE(A.`https://uri.etsi.org/ngsi-ld/hasObject`) || '"',
                                  /* Value depends on the nodeType: @id, @value, or @json*/
                                  /* @value is the default case, encapsulate within ""*/
                                  IF((LAST_VALUE(A.nodeType) <> '@json' AND LAST_VALUE(A.nodeType) <> '@id') OR LAST_VALUE(A.nodeType) IS NULL, '"' || LAST_VALUE(A.`https://uri.etsi.org/ngsi-ld/hasValue`) || '"',
                                      /* @id needs encoding with "@id": value */
                                      IF(LAST_VALUE(A.nodeType) = '@id', '{"@id": "' || LAST_VALUE(A.`https://uri.etsi.org/ngsi-ld/hasValue`) || '"}',
                                      /* @json is put directly into value field */
                                          IF(LAST_VALUE(A.nodeType) = '@json', LAST_VALUE(A.`https://uri.etsi.org/ngsi-ld/hasValue`), 'null' /*should not happen */)))
                          )
                          || '}' as indexagg
                  FROM TABLE( TUMBLE(TABLE attributes, DESCRIPTOR(ts), INTERVAL {{.Values.flink.ngsildUpdateWindow|squote}} second)) as A
                  WHERE A.entityId IS NOT NULL
                  GROUP BY A.entityId, A.index, A.name, window_start, window_end) as B
              GROUP BY window_start, window_end, entityId, name
          ) GROUP BY window_start, window_end, id;
        - |-
          /* copy changes from attributes-inserts back to attributes */
          insert into attributes
          SELECT id, last_value(entityId), last_value(name), last_value(nodeType), last_value(valueType), index, last_value(`type`), last_value(`https://uri.etsi.org/ngsi-ld/hasValue`), last_value(`https://uri.etsi.org/ngsi-ld/hasObject`), window_start
            FROM TABLE(
              TUMBLE(TABLE attributes_insert_filter, DESCRIPTOR(`ts`), INTERVAL {{.Values.flink.attributeInsertWindow|squote}} SECOND))
            GROUP BY window_start, window_end, id, index;
    tables:
        - alerts
        - alerts-filter
        - attributes
        - attributes-insert-filter
        - ngsild-updates
