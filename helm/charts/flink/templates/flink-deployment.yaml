{{- $secret := "" }}
{{- if .Values.minio.enabled }}
  {{- $secret = (lookup "v1" "Secret" .Release.Namespace "minio-user") -}}
{{- end }}
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: flink-deployment
spec:
  image: {{ .Values.mainRegistry }}/{{ .Values.mainRepo }}/flink-sql-gateway:{{ .Values.mainVersion }}
  flinkVersion: v1_19
  flinkConfiguration:
    web.submit.enable:  "true"
    web.cancel.enable:  "true"
    taskmanager.numberOfTaskSlots: "3"
    #jobmanager.rpc.address: flink-jobmanager
    pipeline.max-parallelism: 4
    blob.server.port: 6124
    jobmanager.rpc.port: 6123
    taskmanager.rpc.port: 6122

    queryable-state.proxy.ports: 6125
    jobmanager.memory.process.size: 1000m
    taskmanager.memory.process.size: 2500m

    s3.endpoint: {{ printf "%s://%s" .Values.s3.protocol .Values.s3.endpoint }}
    {{- if .Values.minio.enabled }}
    s3.path.style.access: true
    {{- end }}
    s3.access-key: {{ .Values.s3.userAccessKey }}
    {{ if $secret }}
    s3.secret-key: {{ $secret.data.CONSOLE_SECRET_KEY | b64dec }}
    {{ else }}
    s3.secret-key: {{ .Values.s3.userSecretKey }}
    {{ end }}
    state.backend.rocksdb.localdir: /tmp/rocksdb
    state.backend.rocksdb.log.level: INFO_LEVEL
    state.backend.rocksdb.log.max-file-size: 10MB
    state.backend.rocksdb.log.file-num: 10
    state.backend.rocksdb.log.dir: /tmp/rocksdb/logs
    state.backend.incremental: false
    # RocksDB metrics and Flamegraph. Enable these for debugging troubleshooting
    # rest.flamegraph.enabled: true
    # state.backend.rocksdb.metrics.actual-delayed-write-rate: true
    # state.backend.rocksdb.metrics.background-errors: true
    # state.backend.rocksdb.metrics.block-cache-capacity: true
    # state.backend.rocksdb.metrics.block-cache-hit: true
    # state.backend.rocksdb.metrics.block-cache-miss: true
    # state.backend.rocksdb.metrics.block-cache-pinned-usage: true
    # state.backend.rocksdb.metrics.block-cache-usage: true
    # state.backend.rocksdb.metrics.bytes-read: true
    # state.backend.rocksdb.metrics.bytes-written: true
    # state.backend.rocksdb.metrics.column-family-as-variable: true
    # state.backend.rocksdb.metrics.compaction-pending: true
    # state.backend.rocksdb.metrics.compaction-read-bytes: true
    # state.backend.rocksdb.metrics.compaction-write-bytes: true
    # state.backend.rocksdb.metrics.cur-size-active-mem-table: true
    # state.backend.rocksdb.metrics.cur-size-all-mem-tables: true
    # state.backend.rocksdb.metrics.estimate-live-data-size: true
    # state.backend.rocksdb.metrics.estimate-num-keys: true
    # state.backend.rocksdb.metrics.estimate-pending-compaction-bytes: true
    # state.backend.rocksdb.metrics.estimate-table-readers-mem: true
    # state.backend.rocksdb.metrics.is-write-stopped: true
    # state.backend.rocksdb.metrics.iter-bytes-read: true
    # state.backend.rocksdb.metrics.live-sst-files-size: true
    # state.backend.rocksdb.metrics.mem-table-flush-pending: true
    # state.backend.rocksdb.metrics.num-deletes-active-mem-table: true
    # state.backend.rocksdb.metrics.num-deletes-imm-mem-tables: true
    # state.backend.rocksdb.metrics.num-entries-active-mem-table: true
    # state.backend.rocksdb.metrics.num-entries-imm-mem-tables: true
    # state.backend.rocksdb.metrics.num-immutable-mem-table: true
    # state.backend.rocksdb.metrics.num-live-versions: true
    # state.backend.rocksdb.metrics.num-running-compactions: true
    # state.backend.rocksdb.metrics.num-running-flushes: true
    # state.backend.rocksdb.metrics.num-snapshots: true
    # state.backend.rocksdb.metrics.size-all-mem-tables: true
    # state.backend.rocksdb.metrics.stall-micros: true
    # state.backend.rocksdb.metrics.total-sst-files-size: true

    state.checkpoints.dir: s3://{{ .Values.flink.bucket }}/{{ .Values.flink.checkpointDir }}
    state.savepoints.dir: s3://{{ .Values.flink.bucket }}/{{ .Values.flink.savepointDir }}
    high-availability: kubernetes
    high-availability.storageDir: s3://{{ .Values.flink.bucket }}/{{ .Values.flink.haDir }}
    restart-strategy: exponential-delay
    restart-strategy.exponential-delay.max-backoff: 2 min
    process.working-dir: /tmp/process
  serviceAccount: flink
  jobManager:
    resource:
      memory: "1000m"
      cpu: 1
    podTemplate:
      spec:
        initContainers:
          {{- if .Values.minio.enabled }}
          - name: wait-for-minio
            image: {{ .Values.externalRegistry }}/busybox:1.28
            command: ['sh', '-c', "until wget -S {{ printf "%s://%s" .Values.s3.protocol .Values.s3.endpoint }}{{ .Values.minio.healthPath }} 2>&1 | awk '/^  HTTP/{print $2}' | grep 200; do echo waiting for minio; sleep 1; done"]
          {{- end }}
          - name: create-bucket
            image: {{ .Values.externalRegistry }}/{{ .Values.minio.mcImage }}
            env:
            - name: MC_HOST_iff
              {{- if $secret }}
              value: {{ printf "%s://%s:%s@%s" .Values.s3.protocol .Values.s3.userAccessKey ($secret.data.CONSOLE_SECRET_KEY | b64dec) .Values.s3.endpoint }}
              {{- else }}
              value: {{ printf "%s://%s:%s@%s" .Values.s3.protocol .Values.s3.userAccessKey .Values.s3.userSecretKey .Values.s3.endpoint }}
              {{- end }}
            command: ["/bin/bash", "-c", "mc mb -p iff/{{ .Values.flink.bucket }}"]
        containers:
          - name: flink-main-container
            workingDir: /opt/flink
            env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            # The following args overwrite the value of jobmanager.rpc.address configured in the configuration config map to POD_IP.
            args: ["jobmanager", "$(POD_IP)"]
            ports:
            - containerPort: 6123
              name: rpc
            - containerPort: 6124
              name: blob-server
            - containerPort: 8081
              name: webui
            volumeMounts:
            - mountPath: /tmp
              name: jm-tmp-volume
            securityContext:
              runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
          - name: sql-gateway
            image: {{ .Values.mainRegistry }}/{{ .Values.mainRepo }}/flink-sql-gateway:{{ .Values.mainVersion }}
            workingDir: /opt/gateway
            command: ["/bin/bash", "-c", "${NODEJSPATH}/node gateway.js"]
            env:
            - name: SIMPLE_FLINK_SQL_GATEWAY_PORT
              value: {{ .Values.flink.sqlClientPort | quote }}
            ports:
            - containerPort: {{ .Values.flink.sqlClientPort }}
              name: rest
            volumeMounts:
            - name: flink-config-volume
              mountPath: /opt/flink/conf
            - mountPath: /tmp
              name: gw-tmp-volume
            securityContext:
              runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
        volumes:
        - name: jm-tmp-volume
          emptyDir:
            sizeLimit: {{ .Values.flink.jobmanagerCacheSize }}
        - name: gw-tmp-volume
          emptyDir:
            sizeLimit: {{ .Values.flink.jobmanagerCacheSize }}
        imagePullSecrets:
          - name: {{ .Values.pullSecretCredentials }}
  taskManager:
    resource:
      memory: "2500m"
      cpu: 1