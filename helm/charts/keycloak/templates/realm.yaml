apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: iff-realm
  labels:
    app: keycloak
spec:
  realm:
    id: {{ .Values.keycloak.alerta.realm | quote }}
    realm: {{ .Values.keycloak.alerta.realm | quote }}
    enabled: True
    displayName: "Basic Realm for Alerta and Scorpio"
    clientScopes:
      - name: factory-admin
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
        protocolMappers:
        - name: factory-admin-mapper
          protocol: openid-connect
          protocolMapper: oidc-hardcoded-role-mapper
          config:
            role: {{ .Values.keycloak.ngsildUpdates.serviceRole }}
      - name: profile
        description: 'OpenID Connect built-in scope: profile'
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${profileScopeConsentText}
        protocolMappers:
          - id: 37de5bd3-e78f-497e-89e3-20e96e15e200
            name: birthdate
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: birthdate
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: birthdate
              jsonType.label: String
          - id: 3e6e7501-4868-4c5c-b9a2-4e5715c5da1b
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: locale
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: locale
              jsonType.label: String
          - id: aef2997b-7954-4758-bd51-9869e321f03a
            name: website
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: website
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: website
              jsonType.label: String
          - id: 182af694-a6d3-4117-8886-4cbe920052c5
            name: middle name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: middleName
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: middle_name
              jsonType.label: String
          - id: f4f72077-b028-4c1a-9c5b-e2fe4a16a212
            name: nickname
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: nickname
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: nickname
              jsonType.label: String
          - id: 0809097b-c31d-4730-af8b-ac0eba043eb9
            name: zoneinfo
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: zoneinfo
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: zoneinfo
              jsonType.label: String
          - id: 42947f4a-5cdb-4ddd-a6a5-e47f6b6c0ed9
            name: updated at
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: updatedAt
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: updated_at
              jsonType.label: String
          - id: 9b30ede3-621d-460e-98d7-170c6f367dce
            name: family name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: lastName
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: family_name
              jsonType.label: String
          - id: 1a9a0ea5-e915-4d7f-85a5-315c1c7f5e43
            name: username
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: username
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: preferred_username
              jsonType.label: String
          - id: 5e356c98-95ef-4e18-82ba-f8a248e5caf2
            name: given name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: firstName
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: given_name
              jsonType.label: String
          - id: 249c2a24-85fb-4886-ba1d-dfd13a60b874
            name: profile
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: profile
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: profile
              jsonType.label: String
          - id: 869abe14-d993-46e1-b640-f59eec12495b
            name: gender
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: gender
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: gender
              jsonType.label: String
          - id: 30ef574e-6c0a-4ebe-971d-443b997456a3
            name: full name
            protocol: openid-connect
            protocolMapper: oidc-full-name-mapper
            consentRequired: false
            config:
              id.token.claim: "true"
              access.token.claim: "true"
              userinfo.token.claim: "true"
          - id: fc41fb8a-54ae-41ae-a37d-0fa4fe773a7f
            name: picture
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: picture
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: picture
              jsonType.label: String
      - id: 69ad66ac-8ba9-402e-8bba-8ea55a996fe3
        name: roles
        description: OpenID Connect scope for add user roles to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "true"
          consent.screen.text: ${rolesScopeConsentText}
        protocolMappers:
          - id: f9317de0-427b-48e1-bfe2-17a9bca48883
            name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: "true"
              claim.name: realm_access.roles
              jsonType.label: String
              multivalued: "true"
          - id: 14f23054-f9a0-41d3-8b52-db912afa6a58
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: {}
          - id: 1bec7a6b-6796-4a93-96a7-7a6f33ec6c89
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: "true"
              claim.name: resource_access.${client_id}.roles
              jsonType.label: String
              multivalued: "true"
      - id: 21090fa7-b6e1-40d2-8ed9-2811301a0bb8
        name: offline_access
        description: 'OpenID Connect built-in scope: offline_access'
        protocol: openid-connect
        attributes:
          consent.screen.text: ${offlineAccessScopeConsentText}
          display.on.consent.screen: "true"
      - id: a89645b1-4070-476e-9a6e-a4b0b294953c
        name: email
        description: 'OpenID Connect built-in scope: email'
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${emailScopeConsentText}
        protocolMappers:
          - id: 55d2750e-7107-4d26-bf36-73517cb6fcff
            name: email verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: emailVerified
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: email_verified
              jsonType.label: boolean
          - id: b4a95f4c-99d5-45ea-a1bb-453d0baaf44f
            name: email
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: email
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: email
              jsonType.label: String
  instanceSelector:
    matchLabels:
      app: keycloak
---
{{- $pgsecret := (lookup "v1" "Secret" .Release.Namespace "keycloak-client-secret-alerta-ui") -}}
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: alerta-ui
  labels:
    app: keycloak
spec:
  realmSelector:
     matchLabels:
      app: keycloak
  client:
    clientId: alerta-ui
    publicClient: False
    standardFlowEnabled: True
    redirectUris: 
    {{- range .Values.keycloak.alerta.redirectUris}}
    - {{.}}
    {{- end }}
    defaultClientScopes:
    {{- range .Values.keycloak.alerta.defaultClientScopes}}
    - {{.}}
    {{- end }}
    {{ if $pgsecret }}
    secret: {{ $pgsecret.data.CLIENT_SECRET | b64dec }}
    {{ else }}
    secret: {{ .Values.alertaClientSecret }}
    {{ end }}
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: scorpio
  labels:
    app: keycloak
spec:
  realmSelector:
     matchLabels:
      app: keycloak
  roles:
    - name: "Factory-Admin"
      clientRole: true  
    - name: "Factory-Writer"
      clientRole: true
    - name: Factory-Reader
      clientRole: true
  client:
    clientId: {{ .Values.keycloak.scorpio.client }}
    publicClient: True
    directAccessGrantsEnabled: True
    standardFlowEnabled: True
    defaultClientScopes:
    {{- range .Values.keycloak.alerta.defaultClientScopes}}
    - {{.}}
    {{- end }}
---
{{- $pgsecret := (lookup "v1" "Secret" .Release.Namespace "keycloak-client-secret-alerta-ui") -}}
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: ngsild-updates
  labels:
    app: keycloak
spec:
  realmSelector:
     matchLabels:
      app: keycloak
  client:
    clientId:  {{ .Values.keycloak.ngsildUpdates.client }}
    publicClient: False
    serviceAccountsEnabled: True
    defaultClientScopes:
    - roles
    - factory-admin
    {{ if $pgsecret }}
    secret: {{ $pgsecret.data.CLIENT_SECRET | b64dec }}
    {{ else }}
    secret: {{ .Values.ngsildUpdatesClientSecret }}
    {{ end }}
---
{{- $pgsecret := (lookup "v1" "Secret" .Release.Namespace "credential-iff-realm-user-iff") -}}
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: testuser
spec:
  user:
    username: "realm_user"
    firstName: "John"
    lastName: "Doe"
    email: "user@example.com"
    enabled: True
    emailVerified: False
    credentials:
      - type: "password"
        {{ if $pgsecret }}
        {{ else }}
        value: {{ randAlphaNum 32 }}
        {{ end }}
    realmRoles:
      - "offline_access"
    clientRoles:
      account:
        - "manage-account"
      realm-management:
        - "manage-users"
      {{ .Values.keycloak.scorpio.client }}:
        - Factory-Admin
  realmSelector:
    matchLabels:
      app: keycloak
