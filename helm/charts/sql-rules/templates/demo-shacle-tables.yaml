apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlTable
metadata:
  name: cutter
spec:
  name: cutter
  connector: kafka
  fields:
  - 'id': STRING
  - 'type':  STRING
  - 'https://industry-fusion.com/types/v0.9/hasWorkpiece': STRING
  - 'https://industry-fusion.com/types/v0.9/hasFilter': STRING
  - 'https://industry-fusion.com/types/v0.9/state': STRING
  - 'ts': TIMESTAMP(3) METADATA FROM 'timestamp'
  - 'watermark': FOR ts AS ts - INTERVAL '0.001' SECOND
  kafka:
    topic: {{ .Values.kafkaBridge.debezium.entityTopicPrefix }}.cutter
    properties:
      bootstrap.servers: {{ .Values.kafka.bootstrapServer }}
    scan.startup.mode: earliest-offset
  value:
    format: json
    json.fail-on-missing-field: false
    json.ignore-parse-errors: true
---
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlView
metadata:
  name: cutter-view
spec:
  name: cutter_view
  sqlstatement: |
    SELECT id, `type`,
           `https://industry-fusion.com/types/v0.9/hasWorkpiece`,
           `https://industry-fusion.com/types/v0.9/hasFilter`,
           `https://industry-fusion.com/types/v0.9/state`
    FROM (
      SELECT *,
      ROW_NUMBER() OVER (PARTITION BY `id`
         ORDER BY ts DESC) AS rownum
      FROM `cutter` )
      WHERE rownum = 1;
---
apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlTable
metadata:
  name: filter
spec:
  name: filter
  connector: kafka
  fields:
  - 'id': STRING
  - 'type':  STRING
  - 'https://industry-fusion.com/types/v0.9/strength': STRING
  - 'https://industry-fusion.com/types/v0.9/hasCartridge': STRING
  - 'https://industry-fusion.com/types/v0.9/state': STRING
  - 'ts': TIMESTAMP(3) METADATA FROM 'timestamp'
  - 'watermark': FOR ts AS ts - INTERVAL '0.001' SECOND
  kafka:
    topic: {{ .Values.kafkaBridge.debezium.entityTopicPrefix }}.filter
    properties:
      bootstrap.servers: {{ .Values.kafka.bootstrapServer }}
    scan.startup.mode: earliest-offset
  value:
    format: json
    json.fail-on-missing-field: false
    json.ignore-parse-errors: true
---
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlView
metadata:
  name: filter-view
spec:
  name: filter_view
  sqlstatement: |
    SELECT id, `type`,
    `https://industry-fusion.com/types/v0.9/strength`,
    `https://industry-fusion.com/types/v0.9/hasCartridge`,
    `https://industry-fusion.com/types/v0.9/state`
    FROM (
      SELECT *,
      ROW_NUMBER() OVER (PARTITION BY `id`
         ORDER BY ts DESC) AS rownum
      FROM `filter` )
      WHERE rownum = 1;
---
apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlTable
metadata:
  name: workpiece
spec:
  name: workpiece
  connector: kafka
  fields:
  - 'id': STRING
  - 'type':  STRING
  - 'https://industry-fusion.com/types/v0.9/material': STRING
  - 'https://schema.org/depth': STRING
  - 'ts': TIMESTAMP(3) METADATA FROM 'timestamp'
  - 'watermark': FOR ts AS ts - INTERVAL '0.001' SECOND
  kafka:
    topic: {{ .Values.kafkaBridge.debezium.entityTopicPrefix }}.workpiece
    properties:
      bootstrap.servers: {{ .Values.kafka.bootstrapServer }}
    scan.startup.mode: earliest-offset
  value:
    format: json
    json.fail-on-missing-field: false
    json.ignore-parse-errors: true
---
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlView
metadata:
  name: workpiece-view
spec:
  name: workpiece_view
  sqlstatement: |
    SELECT id, `type`,
      `https://industry-fusion.com/types/v0.9/material`,
      `https://schema.org/depth`
    FROM (
      SELECT *,
      ROW_NUMBER() OVER (PARTITION BY `id`
         ORDER BY ts DESC) AS rownum
      FROM `workpiece` )
      WHERE rownum = 1;
---
apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlTable
metadata:
  name: filter-cartridge
spec:
  name: filter_cartridge
  connector: kafka
  fields:
  - 'id': STRING
  - 'type':  STRING
  - 'https://industry-fusion.com/types/v0.9/wasteClass': STRING
  - 'https://industry-fusion.com/types/v0.9/usedFrom': STRING
  - 'https://industry-fusion.com/types/v0.9/usedUntil': STRING
  - 'ts': TIMESTAMP(3) METADATA FROM 'timestamp'
  - 'watermark': FOR ts AS ts - INTERVAL '0.001' SECOND
  kafka:
    topic: {{ .Values.kafkaBridge.debezium.entityTopicPrefix }}.filterCartridge
    properties:
      bootstrap.servers: {{ .Values.kafka.bootstrapServer }}
    scan.startup.mode: earliest-offset
  value:
    format: json
    json.fail-on-missing-field: false
    json.ignore-parse-errors: true
---
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlView
metadata:
  name: filter-cartridge-view
spec:
  name: filter_cartridge_view
  sqlstatement: |
    SELECT id, `type`,
     `https://industry-fusion.com/types/v0.9/wasteClass`,
     `https://industry-fusion.com/types/v0.9/usedFrom`,
     `https://industry-fusion.com/types/v0.9/usedUntil`
    FROM (
      SELECT *,
      ROW_NUMBER() OVER (PARTITION BY `id`
         ORDER BY ts DESC) AS rownum
      FROM `filter-cartridge` )
      WHERE rownum = 1;
---
apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlTable
metadata:
  name: attributes
spec:
  name: attributes
  connector: kafka
  fields:
  - 'id': STRING
  - 'entityId': STRING
  - 'name': STRING
  - 'synchronized': BOOLEAN
  - 'index': INTEGER
  - 'type':  STRING
  - 'type': STRING
  - 'https://uri.etsi.org/ngsi-ld/hasValue': STRING
  - 'https://uri.etsi.org/ngsi-ld/hasObject': STRING
  - 'ts': TIMESTAMP(3) METADATA FROM 'timestamp'
  - 'watermark': FOR ts AS ts - INTERVAL '0.001' SECOND
  kafka:
    topic: {{ .Values.kafkaBridge.debezium.attributesTopic }}
    properties:
      bootstrap.servers: {{ .Values.kafka.bootstrapServer }}
    scan.startup.mode: earliest-offset
  value:
    format: json
    json.fail-on-missing-field: false
    json.ignore-parse-errors: true
---
apiVersion: industry-fusion.com/v1alpha1
kind: BeamSqlView
metadata:
  name: attributes-view
spec:
  name: attributes_view
  sqlstatement: |
    SELECT id, entityId, name, synchronized, index, `type`, 
           `https://uri.etsi.org/ngsi-ld/hasValue`, 
           `https://uri.etsi.org/ngsi-ld/hasObject`
    FROM (
      SELECT *,
      ROW_NUMBER() OVER (PARTITION BY `id`
         ORDER BY ts DESC) AS rownum
      FROM `attributes` )
      WHERE rownum = 1;