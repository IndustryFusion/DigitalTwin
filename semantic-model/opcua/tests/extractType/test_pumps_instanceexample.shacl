@prefix base: <https://industryfusion.github.io/contexts/ontology/v0/base/> .
@prefix devices: <http://opcfoundation.org/UA/DI/> .
@prefix ngsi-ld: <https://uri.etsi.org/ngsi-ld/> .
@prefix opcua: <http://opcfoundation.org/UA/> .
@prefix pumps: <http://opcfoundation.org/UA/Pumps/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shacl: <http://my.test/shacl/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

shacl:ActuationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFeedbackVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultValue> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReferenceVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultAction> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStatus> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOnOff> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasManipulatedValue> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:ActuationType .

shacl:BaseObjectTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasParameterIdentifier> ;
            sh:property [ sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass opcua:BaseObjectType .

shacl:BreakdownMaintenanceTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSeverity> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCorrectiveMaintenanceTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCriticality> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFailure> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNumberOfFailures> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:BreakdownMaintenanceType .

shacl:ConditionBasedMaintenanceTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAvailability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaintainability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExpectedReliability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIntrinsicReliability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProductionBasedAvailability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTimeBasedAvailability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperationalReliability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDurability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReliability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIntrinsicMaintainability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstantaneousAvailability> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:ConditionBasedMaintenanceType .

shacl:ConfigurationGroupTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesign> ;
            sh:property [ sh:class pumps:DesignType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSystemRequirements> ;
            sh:property [ sh:class pumps:SystemRequirementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasImplementation> ;
            sh:property [ sh:class pumps:ImplementationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:ConfigurationGroupType .

shacl:ControlTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeadTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFeedbackVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingMode> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasManipulatedVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProportionalActionCoefficient> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDerivativeActionCoefficient> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControlDifferenceVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIntegralActionCoefficient> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFinalControlledVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControllerOutputVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControlledVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReferenceVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCommandVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:ControlType .

shacl:DesignTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDryCriticalSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasClearanceVolume> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTripSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeclarationOfConformity> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSuction_SpecificSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeadAtPeakPoint> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableRelativeHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTypeNumber> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasShut_OffPumpPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOptimumRateOfFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableContinuousSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableRelativeHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAxialLoad> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumContinuousStableFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableAmbientTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableWorkingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableContinuousSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumContinuousThermalFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumStaticSealingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasShut_OffHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOfferedFieldbuses> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveSuctionHeadRequiredForADropOf3Percent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGeometricDisplacementVolume> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumRadialLoad> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAdditionalFieldbuses> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSpecificSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpClass> ;
            sh:property [ sh:class pumps:PumpClassEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableCasingWorkingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCounter_ClockwiseRotation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPossibleFluids> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGeometricalFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableThermalFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExplosionProtection> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControllable> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundEnergyLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesignAxialLoad> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWarmUpTimeForAVaporJetPumpOrADiffusionPump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveSuctionHeadRequired> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCriticalSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVolumeFlowRateOfBackingPump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPower> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCool_DownTimeForAVaporJetPumpOrADiffusionPump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVolumeFlowRate> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPistonVelocity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLeakageRateOfFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPressureLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSlipFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDirectivesOfEUDeclarationOfConformity> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBalancingRateOfFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOfferedControlModes> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOptimumPumpPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSweptVolume> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPowerLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOptimumHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasClockwiseRotation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableAmbientTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundEnergy> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanTimebetweenFailures> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWetCriticalSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPre_ChargePressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBasePressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumPumpPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStartingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWaterVaporTolerableLoad> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeclarationOfConformityAvailable> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableThroughput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStandardGasFlowrate> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesignRadialLoad> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DesignType .

shacl:DiscreteInputObjectTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOnOffCycle> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDiscreteInputValue> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStatus> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DiscreteInputObjectType .

shacl:DiscreteOutputObjectTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultAction> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOnOffCycle> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultValue> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDiscreteOutputValue> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStatus> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DiscreteOutputObjectType .

shacl:DocumentationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUnitMaintenanceReportLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPipeAndInstrumentDiagramLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasComponentsListLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCircuitDiagramLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDetailLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasScopeOfWorkLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTechnicalDataLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTestProgramReportLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaintenanceManualLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasArrangementsLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasImplementationDescriptionLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperationManualLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPersonnelRecordingLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSingleLineDiagramLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLayoutLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLubricationMapLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCertificatesLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLocationLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLogicDiagramLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStaffLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSparePartReferenceLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDuringMaintenanceServicesRenderedLink> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DocumentationType .

shacl:DriveDesignTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPowerFactor> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaxNominalFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalVoltage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTorqueAtNominalSpeedOfDrive> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedCurrent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalPowerConsumption> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProtectionClass> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinNominalFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEnergyEfficiencyClassOfMotor> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DriveDesignType .

shacl:DriveMeasurementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPowerFactor> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDCLinkVoltage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorVoltage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorCurrent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDriverPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEnergyConsumption> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVoltage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTorque> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCurrent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDCLinkCurrent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:DriveMeasurementsType .

shacl:DrivePortTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCategory> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDirection> ;
            sh:property [ sh:class pumps:PortDirectionEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesign> ;
            sh:property [ sh:class pumps:DriveDesignType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIdCarrier> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasurements> ;
            sh:property [ sh:class pumps:DriveMeasurementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:DrivePortType .

shacl:FileTypeShape a sh:NodeShape ;
    sh:targetClass opcua:FileType .

shacl:FunctionalGroupTypeShape a sh:NodeShape ;
    sh:targetClass devices:FunctionalGroupType .

shacl:GeneralMaintenanceTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaintenanceTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanTimeToRestauration> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDownTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanOperatingTimeBetweenFailures> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaintenanceLevel> ;
            sh:property [ sh:class pumps:MaintenanceLevelEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIdleTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExternalDisabledTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanRepairTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUpTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTimeToRestoration> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingTimeBetweenFailures> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStandbyTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRepairTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasActiveMaintenanceTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFailureRate> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStateOfTheItem> ;
            sh:property [ sh:class pumps:StateOfTheItemEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasObsolescence> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingTimeToFailure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTimeBetweenFailures> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:GeneralMaintenanceType .

shacl:ImplementationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstallationTotalHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHydraulicEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumDynamicSealingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedMeanVelocityAtOutletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtInletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUsefulLife> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpRatedPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVaporPressureOfThePumpedLiquid> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheInletManometer> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVolumetricEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasKinematicViscosity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMechanicalEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedDifferentialPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedMeanVelocityAtInletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpTotalHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveSuctionHeadAvailable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDynamicViscosity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableStableFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpBestEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtOutletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheNpshDatumPlane> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpMechanicalPowerLosses> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAtmosphericPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheOutletManometer> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDensity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasValveSeatVelocity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasValveSpillVelocity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:ImplementationType .

shacl:InletConnectionDesignTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWaterVaporCapacity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalPressure> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveInletPressureRequired> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCriticalBackingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumWorkingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumTolerableWaterVaporInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletAreaOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:InletConnectionDesignType .

shacl:InletConnectionImplementationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheInletConnection> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtInletAreaOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalSize> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanRatedVelocityAtInlet> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:InletConnectionImplementationType .

shacl:InletConnectionMeasurementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletTemperatureOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanVelocityAtInlet> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:InletConnectionMeasurementsType .

shacl:InletConnectionPortTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDirection> ;
            sh:property [ sh:class pumps:PortDirectionEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasurements> ;
            sh:property [ sh:class pumps:InletConnectionMeasurementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasImplementation> ;
            sh:property [ sh:class pumps:InletConnectionImplementationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCategory> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSystemRequirements> ;
            sh:property [ sh:class pumps:InletConnectionSystemRequirementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIdCarrier> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesign> ;
            sh:property [ sh:class pumps:InletConnectionDesignType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:InletConnectionPortType .

shacl:InletConnectionSystemRequirementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:InletConnectionSystemRequirementsType .

shacl:LockingServicesTypeShape a sh:NodeShape ;
    sh:targetClass devices:LockingServicesType .

shacl:MaintenanceGroupTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBreakdownMaintenance> ;
            sh:property [ sh:class pumps:BreakdownMaintenanceType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGeneralMaintenance> ;
            sh:property [ sh:class pumps:GeneralMaintenanceType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPreventiveMaintenance> ;
            sh:property [ sh:class pumps:PreventiveMaintenanceType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasConditionBasedMaintenance> ;
            sh:property [ sh:class pumps:ConditionBasedMaintenanceType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:MaintenanceGroupType .

shacl:MarkingsTypeShape a sh:NodeShape ;
    sh:targetClass pumps:MarkingsType .

shacl:MeasurementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtOutletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVolumetricEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProcessPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHousingTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCoolantTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundEnergy> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMassFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHydraulicEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAmbientHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletPressureOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpPowerOutput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtInletAreaOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBearingTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPower> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPressureLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPowerLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLeakageRateOfFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMechanicalEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAxialLoadOfPumpRotor> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasKinematicViscosity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLubricatingOilPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveSuctionHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSpeed> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpPowerInput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanVelocityAtThroat> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAxialRotorPosition> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNumberOfStarts> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLubricatingOilConsumption> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDensity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasClearanceFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibration> ;
            sh:property [ sh:class pumps:VibrationMeasurementType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasPlaceHolderPattern "[a-zA-Z0-9_-]+" ;
            base:isPlaceHolder true ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBackPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallEfficiency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletPressureOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasThroughput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpTotalHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasElectronicTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFluidTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDifferentialPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDynamicViscosity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPowerLossDueToInternalLeakage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstallationTotalHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAmbientTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRadialLoadOfPumpRotor> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoundEnergyLevel> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:MeasurementsType .

shacl:MultiPumpTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMultiPumpOperationMode> ;
            sh:property [ sh:class pumps:MultiPumpOperationModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpRole> ;
            sh:property [ sh:class pumps:PumpRoleEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExchangeTime> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExchangeTimeDifference> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDistributionType> ;
            sh:property [ sh:class pumps:DistributionTypeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRedundantPumpIDs> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpCollectiveIDs> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExchangeMode> ;
            sh:property [ sh:class pumps:ExchangeModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNumberOfPumps> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDistributionPriority> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumNumberOfPumpsInOperation> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:MultiPumpType .

shacl:OperationalGroupTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpActuation> ;
            sh:property [ sh:class pumps:PumpActuationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSignals> ;
            sh:property [ sh:class pumps:SignalsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControl> ;
            sh:property [ sh:class pumps:ControlType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMultiPump> ;
            sh:property [ sh:class pumps:MultiPumpType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasurements> ;
            sh:property [ sh:class pumps:MeasurementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasThrottleValveActuation> ;
            sh:property [ sh:class pumps:ActuationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBypassActuation> ;
            sh:property [ sh:class pumps:ActuationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:OperationalGroupType .

shacl:OutletConnectionDesignTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalPressure> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAllowableOutletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReliefValveReseatPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReliefValveAccumulationPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAllowableOutetPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletAreaOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReliefValveSetPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReliefValveBackPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:OutletConnectionDesignType .

shacl:OutletConnectionImplementationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheOutletConnection> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanRatedVelocityAtOutlet> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNominalSize> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTotalHeadAtOutletAreaOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedOutletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:OutletConnectionImplementationType .

shacl:OutletConnectionMeasurementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanVelocityAtOutlet> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletTemperatureOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:OutletConnectionMeasurementsType .

shacl:OutletConnectionPortTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDirection> ;
            sh:property [ sh:class pumps:PortDirectionEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCategory> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDesign> ;
            sh:property [ sh:class pumps:OutletConnectionDesignType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasurements> ;
            sh:property [ sh:class pumps:OutletConnectionMeasurementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasImplementation> ;
            sh:property [ sh:class pumps:OutletConnectionImplementationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSystemRequirements> ;
            sh:property [ sh:class pumps:OutletConnectionSystemRequirementsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIdCarrier> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:OutletConnectionPortType .

shacl:OutletConnectionSystemRequirementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBackingPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:OutletConnectionSystemRequirementsType .

shacl:PortsGroupTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDrive> ;
            sh:property [ sh:class pumps:DrivePortType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasPlaceHolderPattern "[a-zA-Z0-9_-]+" ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletConnection> ;
            sh:property [ sh:class pumps:OutletConnectionPortType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasPlaceHolderPattern "[a-zA-Z0-9_-]+" ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletConnection> ;
            sh:property [ sh:class pumps:InletConnectionPortType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasPlaceHolderPattern "[a-zA-Z0-9_-]+" ] ;
    sh:targetClass pumps:PortsGroupType .

shacl:PreventiveMaintenanceTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstallationDate> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNextInspectionDate> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNextServicingDate> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLastServicingDate> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPreventiveMaintenanceTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasActivePreventiveMaintenanceTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLastInspectionDate> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:PreventiveMaintenanceType .

shacl:PumpActuationTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFlushValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpStandByRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpKick> ;
            sh:property [ sh:class pumps:PumpKickObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasManipulatedValue> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVentValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGasDilValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasActualOperationMode> ;
            sh:property [ sh:class pumps:OperationModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReferenceVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultValue> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFeedbackVariable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCleanValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReverseRotatingDirection> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExternalSignal> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSetOperationMode> ;
            sh:property [ sh:class pumps:OperationModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultAction> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPurgeValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStatus> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEnable> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOnOff> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSetControlMode> ;
            sh:property [ sh:class pumps:ControlModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasActualControlMode> ;
            sh:property [ sh:class pumps:ControlModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletValveRequest> ;
            sh:property [ sh:class pumps:DiscreteOutputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControlInversion> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:PumpActuationType .

shacl:PumpIdentificationTypeShape a sh:NodeShape ;
    sh:targetClass pumps:PumpIdentificationType .

shacl:PumpKickObjectTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultValue> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFaultAction> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpKickMode> ;
            sh:property [ sh:class pumps:PumpKickModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOnOffCycle> ;
            sh:property [ sh:datatype xsd:integer ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStatus> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpKickTimeDifference> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDiscreteOutputValue> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpKickTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:PumpKickObjectType .

shacl:PumpTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDocumentation> ;
            sh:property [ sh:class pumps:DocumentationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaintenance> ;
            sh:property [ sh:class pumps:MaintenanceGroupType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEvents> ;
            sh:property [ sh:class pumps:SupervisionType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasConfiguration> ;
            sh:property [ sh:class pumps:ConfigurationGroupType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperational> ;
            sh:property [ sh:class pumps:OperationalGroupType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasParameterSet> ;
            sh:property [ sh:class opcua:BaseObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPorts> ;
            sh:property [ sh:class pumps:PortsGroupType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:PumpType .

shacl:SignalsTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGasDilValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAcceleration> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpSpeedMax> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpDirection> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProcessIsActive> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFlushValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStandBy> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTargetSpeed> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNoRotation> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStandBySpeed> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedSpeed> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCleanValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPurgeValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpPowerMax> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVentValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpActivation> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpOperation> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPumpSpeedMin> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInletValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeceleration> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOutletValveOpen> ;
            sh:property [ sh:class pumps:DiscreteInputObjectType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:SignalsType .

shacl:SupervisionAuxiliaryDeviceTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFouling> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTemperatureShock> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExciterError> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWearReserveWear> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibration> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasElectromagneticInterference> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLineLength> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHumidityElectronics> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasuredMaterialElectronics> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAuxiliaryMediumAbsence> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWearReserveOperation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProcessInfluence> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCommunicationError> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasParameterSetting> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingConditions> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInterruption> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeviation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSensorElement> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEvaluationElectronics> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAuxiliaryDeviceFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAuxiliaryMediumInsufficiency> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPeripheral> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverloading> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAuxiliaryPowerRange> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasActuatorElement> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOther> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAmbientTemperature> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasElectronicFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaterialElectronics> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMechanicalDamage> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstallation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEnergySupply> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCorrosion> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStartUp> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAuxiliaryPowerPole> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionAuxiliaryDeviceType .

shacl:SupervisionElectronicsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyVoltageHigh> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPhaseFailure> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInstallationFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVoltageInsideDevice> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasElectricalFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasShortToEarth> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyFrequencyLow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyCurrentHigh> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasInsulationResistance> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFieldCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCurrentInsideDevice> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyFrequency> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyFrequencyHigh> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasShortCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyVoltage> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyCurrent> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyVoltageLow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasArmatureCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWindingTemperature> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupplyCurrentLow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionElectronicsType .

shacl:SupervisionHardwareTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDCLinkSupply> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPowerSupply> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHardwareFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeasureCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMicroProcessor> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCommunication> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRam> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasComputingCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasIONA> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasEprom> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetworkNA> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControlCircuit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionHardwareType .

shacl:SupervisionMechanicsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUnbalance> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRadialBearingFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBrakeChopper> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMisalignment> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMechanicalFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAxialBearingOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRotorStationRubbing> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAxialBearingAbrasion> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAxialBearingFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExcessVibration> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRadialBearingAbrasion> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRadialBearingOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBrakeOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRotorBlocked> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGapWear> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBearingFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionMechanicsType .

shacl:SupervisionProcessFluidTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasViscosity> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDry> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasProcessFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCavitation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSolid> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPressure> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBlockage> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFlow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTemperature> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLiquid> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasStall> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCondensation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGas> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionProcessFluidType .

shacl:SupervisionPumpOperationTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverLoad> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLubricant> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCoolantFlow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTemperatureFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDirtyImpeller> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPartialLoad> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAccessoryLiquidLow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGeneratorOperation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCoolantOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWearReserveExhausted> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTurbineOperation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDeceleration> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAccessoryLiquidFlow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumOperationTime> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumStartsAtTime> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTMSFailure> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasDriveOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAccessoryLiquidPressure> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAccessoryLiquidHigh> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSynchronisation> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumNumberStarts> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperationFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControllerOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAccessoryLiquidOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUnderSpeed> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTimeOut> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasLeakage> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasTorqueLimit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCoolantHigh> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVelocityLimit> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMotorHumidity> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCoolantLow> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasAmbientTemperature> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasConverterOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCaseOverheat> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverSpeed> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionPumpOperationType .

shacl:SupervisionSoftwareTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasApplication> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOS> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMemory> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCommunication> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasControl> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoftwareReset> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasParameter> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSoftwareFault> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SupervisionSoftwareType .

shacl:SupervisionTypeShape a sh:NodeShape ;
    sh:property [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionAuxiliaryDevice> ;
            sh:property [ sh:class pumps:SupervisionAuxiliaryDeviceType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionProcessFluid> ;
            sh:property [ sh:class pumps:SupervisionProcessFluidType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionHardware> ;
            sh:property [ sh:class pumps:SupervisionHardwareType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionSoftware> ;
            sh:property [ sh:class pumps:SupervisionSoftwareType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionPumpOperation> ;
            sh:property [ sh:class pumps:SupervisionPumpOperationType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionElectronics> ;
            sh:property [ sh:class pumps:SupervisionElectronicsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSupervisionMechanics> ;
            sh:property [ sh:class pumps:SupervisionMechanicsType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ] ;
    sh:targetClass pumps:SupervisionType .

shacl:SystemRequirementsTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfThePump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasCompressionRatio> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGasContent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasWorkingTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMulti_Phase> ;
            sh:property [ sh:datatype xsd:boolean ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheInletSideOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumAmbientTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNormalFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumRelativeHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedInletPressureOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFieldbus> ;
            sh:property [ sh:class pumps:FieldbusEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRatedPumpUnitTotalHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumOutletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasUltimatePressureOfAVacuumPump> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasThroughput> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSolidContent> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNetPositiveInletPressureAvailable> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNpshDatumPlane> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasFluid> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasExplosionZone> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasHeightOfTheOutletSideOfTheInstallation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumOutletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMeanTimeBetweenFailures> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumRelativeHumidity> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOperatingMode> ;
            sh:property [ sh:class pumps:OperatingModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumInletPressure> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReferencePlane> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumAmbientTemperature> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRequiredControlMode> ;
            sh:property [ sh:class pumps:ControlModeEnum ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMaximumHead> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRequiredTime> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasMinimumFlow> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:SystemRequirementsType .

shacl:VibrationMeasurementTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasReferenceStandardForVibrationMeasurement> ;
            sh:property [ sh:datatype xsd:string ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAccelerationPerG_RMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBroadbandCavitationAccelerationPerG_RMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheBearingDefectFrequencies> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/has2XRelativeShaftVibrationP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationVelocity0_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationDisplacementRMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAccelerationP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheBladePassFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRotationalPhase2X> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationDisplacementP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheGearMeshingFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBearingIndex> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAccelerationPerG0_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasNot1XRelativeShaftVibrationP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAcceleration0_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasGapVoltage> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAccelerationRMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/has1XRelativeShaftVibrationP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationVelocityRMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBearingIndexPerG> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBroadbandCavitationAccelerationRMS> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasRotationalPhase1X> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheBearingDefectFrequenciesPerG> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheFirstHarmonicOfTheRotationFrequency2X> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasSpeedOfRotation> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheSidebandsOfTheGearMeshingFrequencyPerG> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheHarmonicsOfTheRotationFrequencyNx> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationAccelerationPerGP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheRotationFrequency1X> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/has1XPhase> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasThrustPosition> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheGearMeshingFrequencyPerG> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasOverallVibrationVelocityP_P> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/has2XPhase> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasVibrationAmplitudeAtTheSidebandsOfTheGearMeshingFrequency> ;
            sh:property [ sh:datatype xsd:double ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:Literal ;
                    sh:path ngsi-ld:hasValue ] ] ;
    sh:targetClass pumps:VibrationMeasurementType .

