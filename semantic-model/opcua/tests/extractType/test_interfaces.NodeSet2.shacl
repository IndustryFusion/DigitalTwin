@prefix base: <https://industryfusion.github.io/contexts/ontology/v0/base/> .
@prefix devices: <http://opcfoundation.org/UA/DI/> .
@prefix ngsi-ld: <https://uri.etsi.org/ngsi-ld/> .
@prefix opcua: <http://opcfoundation.org/UA/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shacl: <http://my.test/shacl/> .
@prefix test: <http://my.test/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

shacl:AlphaTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:double ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:double ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasC> ;
            base:hasReferenceType opcua:HasComponent ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasBSub> ;
            sh:property [ sh:class test:BSubType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasReferenceType opcua:HasComponent ],
        [ a base:SubComponentRelationship ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasB> ;
            sh:property [ sh:class test:BType ;
                    sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:nodeKind sh:IRI ;
                    sh:path ngsi-ld:hasObject ] ;
            base:hasReferenceType opcua:HasComponent ] ;
    sh:targetClass test:AlphaType .

shacl:BSubTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasHardwareRevision> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:boolean ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:boolean ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasMyVariable> ;
            base:hasReferenceType opcua:HasComponent ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:integer ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:integer ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasRevisionCounter> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasManufacturer> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:dateTime ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:dateTime ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasInitialOperationDate> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasProductInstanceUri> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasDeviceRevision> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:integer ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:integer ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasYearOfConstruction> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:path <http://my.test/entity/hasPatchIdentifiers> ;
            sh:property [ sh:maxCount 1 ;
                    sh:minCount 1 ;
                    sh:or ( [ sh:nodeKind sh:BlankNode ;
                                sh:property [ sh:datatype xsd:string ;
                                        sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                    sh:path ngsi-ld:hasValueList ] ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasDeviceManual> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasProductCode> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasSerialNumber> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:dateTime ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:dateTime ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasSoftwareReleaseDate> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasDeviceClass> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasManufacturerUri> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:integer ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:integer ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasMonthOfConstruction> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:class devices:DeviceHealthEnumeration ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:IRI ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:class devices:DeviceHealthEnumeration ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasDeviceHealth> ;
            base:hasReferenceType opcua:HasComponent ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasSoftwareRevision> ;
            base:hasReferenceType opcua:HasProperty ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:string ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:string ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasModel> ;
            base:hasReferenceType opcua:HasProperty ] ;
    sh:targetClass test:BSubType .

shacl:BTypeShape a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:class devices:DeviceHealthEnumeration ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:IRI ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:class devices:DeviceHealthEnumeration ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasDeviceHealth> ;
            base:hasReferenceType opcua:HasComponent ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:nodeKind sh:BlankNode ;
            sh:or ( [ sh:property [ sh:datatype xsd:boolean ;
                                sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:nodeKind sh:Literal ;
                                sh:path ngsi-ld:hasValue ] ] [ sh:property [ sh:maxCount 1 ;
                                sh:minCount 1 ;
                                sh:or ( [ sh:nodeKind sh:BlankNode ;
                                            sh:property [ sh:datatype xsd:boolean ;
                                                    sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:hasValue () ] ) ;
                                sh:path ngsi-ld:hasValueList ] ] ) ;
            sh:path <http://my.test/entity/hasMyVariable> ;
            base:hasReferenceType opcua:HasComponent ] ;
    sh:targetClass test:BType .

shacl:FolderTypeShape a sh:NodeShape ;
    sh:targetClass opcua:FolderType .

