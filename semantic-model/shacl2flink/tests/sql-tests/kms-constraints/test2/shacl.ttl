@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix iff: <https://industry-fusion.com/types/v0.9/> .
PREFIX ex: <http://example.com/ns#>


iff:MachineShape
    a sh:NodeShape ;
    sh:targetClass iff:machine ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
.


iff:CutterShape
    a sh:NodeShape ;
    sh:targetClass iff:cutter ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasFilter> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:filter ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasWorkpiece> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:workpiece ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:WorkpieceShape
    a sh:NodeShape ;
    sh:targetClass iff:workpiece ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/material> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal;
            sh:minLength 6 ;
            sh:maxLength 7 ;
            sh:pattern "^1\\.\\d{4,5}" ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:datatype <https://industry-fusion.com/types/v0.9/steelGrade>
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://schema.org/depth> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:maxInclusive 100.0 ;
            sh:minExclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:FilterShape
    a sh:NodeShape ;
    sh:targetClass iff:filter ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/strength> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal;
            sh:minInclusive 0.0 ;
            sh:maxInclusive 1.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasCartridge> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;

        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:filterCartridge ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .

iff:FilterCartridgeShape
    a sh:NodeShape ;
    sh:targetClass iff:filterCartridge ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/wasteClass> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:WC;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/inUseFrom> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/inUseUntil> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:maxCount 1 ;

        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:FilterStrengthShape
    a sh:NodeShape ;
    sh:targetClass iff:filter ;
    sh:sparql [
        a sh:SPARQLConstraints ;
        sh:message "Check Filter strength as function of workpiece" ;
        sh:select """
PREFIX iff: <https://industry-fusion.com/types/v0.9/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <https://schema.org/>

SELECT ?this ?value
    where {
        $this  iff:strength [ <https://uri.etsi.org/ngsi-ld/hasValue> ?strength ] .
        ?pc  a iff:cutter .
        ?pc iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> $this ] .
        ?pc  iff:hasWorkpiece [ <https://uri.etsi.org/ngsi-ld/hasObject> ?wp ] .
        ?wp schema:depth [ <https://uri.etsi.org/ngsi-ld/hasValue> ?depth ] .
        ?pc iff:state [<https://uri.etsi.org/ngsi-ld/hasValue> ?pcstate ] .
        $this iff:state [<https://uri.etsi.org/ngsi-ld/hasValue> ?filterstate ] .
        BIND(
            IF(xsd:integer(?depth) > 500 && xsd:float(?strength) < 1.0, \"Filter strength too low, should be 1.0\", 
                IF(xsd:integer(?depth) > 250 && xsd:float(?strength) < 0.75, \"Filter strength too low, should be at least 0.75\",
                    IF(xsd:float(?strength) < 0.5, \"Filter strength too low, should be at least 0.5\", \"ok\")
                )
            ) as ?value) .
        FILTER(?pcstate = <https://industry-fusion.com/types/v0.9/state_ON> && ?filterstate = <https://industry-fusion.com/types/v0.9/state_ON> && ?value != \"ok\") .
    }
        """ ;
    ] .


iff:StateOnCutterShape
    a sh:NodeShape ;
    sh:targetClass iff:cutter ;
    sh:sparql [
        a sh:SPARQLConstraints;
        sh:severity iff:severityCritical ; 
        sh:message "Cutter running without running filter" ;
        sh:select """
PREFIX iff: <https://industry-fusion.com/types/v0.9/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT $this ?v1 ?f ?v2
    where {
        $this  iff:state [<https://uri.etsi.org/ngsi-ld/hasValue> ?v1 ] .
        $this  iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> ?f ] .
        ?f  iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?v2 ] .
        FILTER(?v1 = <https://industry-fusion.com/types/v0.9/state_ON> && ?v2 != <https://industry-fusion.com/types/v0.9/state_ON>)
    }
        """ ;
    ] .


iff:StateOnFilterShape
    a sh:NodeShape ;
    sh:targetClass iff:filter ;
    sh:sparql [
        a sh:SPARQLConstraints;
        sh:severity iff:severityWarning ;
        sh:message "Filter running without running assigned machine" ;
        sh:select """
PREFIX iff: <https://industry-fusion.com/types/v0.9/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT $this ?v1 ?pc ?v2
    where {
        $this  iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?v1 ] .
        ?pc rdf:type iff:plasmacutter .
        ?pc iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> $this ] .
        ?pc  iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?v2 ] .
        FILTER(?v1 = <https://industry-fusion.com/types/v0.9/state_ON> && ?v2 != <https://industry-fusion.com/types/v0.9/state_ON>)
    }
        """ ;
    ] .

iff:StateValueShape
    a sh:NodeShape ;
    sh:targetClass iff:machine ;
    sh:sparql [
        
        sh:message "State value {?value} are not a valid machineState for machine {$this} of type {?type}" ;
        sh:select """
        PREFIX iff: <https://industry-fusion.com/types/v0.9/>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        SELECT $this ?value ?type
        where {
            ?this a iff:machine .
            ?this  iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?value ] .
            ?this a ?type .
            OPTIONAL{?type rdfs:subClassOf ?basetype .}
            ?x iff:stateValidFor ?basetype .
            FILTER( ?type != <http://www.w3.org/2000/01/rdf-schema#Resource> )
            FILTER NOT EXISTS {

                ?value iff:stateValidFor ?basetype .

            }
        }
        """ ;
    ] .

