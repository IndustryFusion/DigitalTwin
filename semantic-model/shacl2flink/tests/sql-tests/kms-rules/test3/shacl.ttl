@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix iff: <https://industry-fusion.com/types/v0.9/> .
PREFIX ex: <http://example.com/ns#>


iff:MachineShape
    a sh:NodeShape ;
    sh:targetClass iff:machine ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
.


iff:CutterShape
    a sh:NodeShape ;
    sh:targetClass iff:cutter ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasFilter> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:filter ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasWorkpiece> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:workpiece ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:WorkpieceShape
    a sh:NodeShape ;
    sh:targetClass iff:workpiece ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/material> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal;
            sh:minLength 6 ;
            sh:maxLength 7 ;
            sh:pattern "^1\\.\\d{4,5}" ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:datatype <https://industry-fusion.com/types/v0.9/steelGrade>
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://schema.org/depth> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:maxInclusive 100.0 ;
            sh:minExclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:FilterShape
    a sh:NodeShape ;
    sh:targetClass iff:filter ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/state> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:machineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/strength> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal;
            sh:minInclusive 0.0 ;
            sh:maxInclusive 1.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/hasCartridge> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;

        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasObject> ;
            sh:class iff:filterCartridge ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Relationship> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .

iff:FilterCartridgeShape
    a sh:NodeShape ;
    sh:targetClass iff:filterCartridge ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/wasteClass> ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:IRI;
            sh:class iff:WC;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/inUseFrom> ;
        sh:order 2 ;
        sh:nodeKind sh:BlankNode;
        sh:maxCount 1 ;
        sh:property [

            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
        ] ;
    ] ;
    sh:property [
        sh:path <https://industry-fusion.com/types/v0.9/inUseUntil> ;
        sh:order 3 ;
        sh:nodeKind sh:BlankNode;
        sh:maxCount 1 ;

        sh:property [
            sh:path <https://uri.etsi.org/ngsi-ld/hasValue> ;
            sh:nodeKind sh:Literal ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
        sh:property [
            sh:path rdf:type ;
            sh:hasValue <https://uri.etsi.org/ngsi-ld/Property> ;
            sh:minCount 1 ;
        ] ;
    ] ;
    .


iff:ChangeWasteClassRulesShape
	a sh:NodeShape ;
	sh:targetClass iff:filterCartridge ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:construct """
            PREFIX iff: <https://industry-fusion.com/types/v0.9/>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
			CONSTRUCT {
				$this iff:wasteClass [ <https://uri.etsi.org/ngsi-ld/hasValue> ?wc ] .
			}
			WHERE {
		?filter iff:hasCartridge [ <https://uri.etsi.org/ngsi-ld/hasObject> $this ] .
                ?cutter iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> ?filter ] .
                ?cutter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?cutter_state ] .
                ?filter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?filter_state ] .
                ?cutter iff:hasWorkpiece [ <https://uri.etsi.org/ngsi-ld/hasObject> ?workpiece ] .
                ?workpiece iff:material [ <https://uri.etsi.org/ngsi-ld/hasValue> ?materialnr ] .
                $this iff:wasteClass [ <https://uri.etsi.org/ngsi-ld/hasValue> ?cur_wasteclass ] .
                ?wc iff:containsMaterialNumber [ rdfs:member ?materialnr ] .
                FILTER(?filter_state = iff:state_ON && ?cutter_state = iff:state_PROCESSING && ?cur_wasteclass != ?wc)
                FILTER NOT EXISTS {
                        ?cur_wasteclass iff:higherHazardLevel ?wc .
                }

			}
			""" ;
	] .



iff:TimestampCartridgeFromRulesShape
	a sh:NodeShape ;
	sh:targetClass iff:filterCartridge ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:construct """
                PREFIX iff: <https://industry-fusion.com/types/v0.9/>
                PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
			CONSTRUCT {
				$this iff:inUseFrom [ <https://uri.etsi.org/ngsi-ld/hasValue> ?ts ] .
			}
			WHERE {
				
                                ?filter iff:hasCartridge [ <https://uri.etsi.org/ngsi-ld/hasObject> $this ] .
                                ?cutter iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> ?filter ] .
                                ?cutter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?cstate ] .
                                ?filter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?fstate ] .
                                bind("timestamp_from" as ?ts)
                                FILTER(?cstate = iff:state_PROCESSING && ?fstate = iff:state_ON)
                                FILTER NOT EXISTS {
				    $this  iff:inUseFrom [ <https://uri.etsi.org/ngsi-ld/hasValue> ?oldertimestamp ] .
				}
			}
			""" ;
	] ;
.


iff:TimestampCartridgeUntilRulesShape
	a sh:NodeShape ;
	sh:targetClass iff:filterCartridge ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:construct """
                PREFIX iff: <https://industry-fusion.com/types/v0.9/>
                PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
			CONSTRUCT {
				$this iff:inUseUntil [ <https://uri.etsi.org/ngsi-ld/hasValue> ?ts ] .
			}
			WHERE {
				
                                #$this iff:wasteClass [ <https://uri.etsi.org/ngsi-ld/hasValue> ?wc ] .
                                ?filter iff:hasCartridge [ <https://uri.etsi.org/ngsi-ld/hasObject> $this ] .
                                ?cutter iff:hasFilter [ <https://uri.etsi.org/ngsi-ld/hasObject> ?filter ] .
                                ?cutter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?cstate ] .
                                ?filter iff:state [ <https://uri.etsi.org/ngsi-ld/hasValue> ?fstate ] .
                                bind("timestamp_until" as ?ts)
                                FILTER(?cstate = iff:state_PROCESSING && ?fstate = iff:state_ON)
			}
			""" ;
	] ;
.
